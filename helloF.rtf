{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang12298{\fonttbl{\f0\fnil\fcharset0 Calibri;}}
{\colortbl ;\red255\green255\blue0;\red0\green0\blue255;}
{\*\generator Riched20 6.3.9600}\viewkind4\uc1 
\pard\sl240\slmult1\f0\fs22\lang9 Django skeleton\par
1. framework for design web applications\par
2. pip3 install virtualenv //This install an virtual environment for django using python.\par
3. pip install django //instala django en el ambiente virtual\par
\highlight1 4. \highlight0 django-admin startproject mysite //make a project \par
5. cd mysite //go into project\par
\highlight1 6\highlight0 . python manage.py startapp polls //create an app polls for the project\par
7. Crete the models\par
/******************************************\par
from django.db import models\par
class Question(models.Model):\par
    question_text = models.CharField(max_length = 100)\par
    pub_date = models.DateTimeField('date published')\par
\tab def __str__(self):\par
\tab\tab return self.question_text\par
\par
class Choice(models.Model):\par
    choice_text = models.CharField(max_length = 200)\par
    votes = models.IntegerField(default = 0)\par
    question = models.ForeignKey(Question, on_delete = models.CASCADE)\par
\tab def __str__(self):\par
\tab\tab return self.choice_text\par
/******************************************\par
8. add the installed app in settings.py\par
9. python manage.py makemigrations polls  //for build changes in models\par
\highlight1 10\highlight0 .python manage.py migrate //to run migrations\par
11. python manage.py shell\par
12. import django\par
13. django.setup()\par
14. from polls.models import Question,Choice\par
15. Question.objects.all()\par
16. from django.utils import timezone\par
17. q = Question(question_text = "What's your name", pub_date = timezone.now()) //to save a Question\par
18. q.save()\par
19. q = Question.objects.get(pk=1)\par
\highlight1 20\highlight0 . q.choice_set.create(choice_text = "bob",votes = 0)\par
21. q.choice_set.create(choice_text = "rachel",votes = 0)\par
22. q.save() //to save in datbase 31.1) exit()\par
23. too activate the super user\par
\tab python manage.py createsuper\par
24. python manage.py runserver ///to run on server \par
25 go to admin.py\par
\tab from .models import Questions, Choice\par
\tab admin.site.register(Question) //to register in the admin\par
\tab admin.site.register(Choice)  //to register in the admin\par
26. //go to urls.py of project (add some content in a web page, and how set data)\par
   //if urls isnot in urls could acces to the web site\par
   //connect urls with views\par
\par
/*******************************************\par
from django.conf.urls import url, include\par
from django.contrib import admin\par
urlpatterns = [\par
   url(r'^admin/', admin.site.urls),\par
    url(r'^polls/', include('polls.urls')),\par
]\par
/***********************************************\par
24. add the three news urls from the views in polls/urls.py to could have acces for those\par
from django.conf.urls import url\par
from . import views\par
urlpatterns = [\par
    url(r'^$',views.index,name="index"),\par
    #127.0.0.1/polls/\par
    url(r'^(?P<question_id>[0-9]+)/$', views.detail, name="detail"),\par
    #127.0.0.1/polls/?\par
    url(r'^(?P<question_id>[0-9]+)/results$', views.results, name="results"),\par
    #127.0.0.1/polls/1/results\par
    url(r'^(?P<question_id>[0-9]+)/vote$', views.detail, name="vote"),\par
]\par
25. so to link index with the before file.\par
in views add.\par
/*******************************************\par
from django.shortcuts import render\par
from django.http import HttpResponse\par
from django.template import loader, RequestContext\par
from .models import  Question\par
# Create your views here.\par
\tab def index(request):\par
    latest_questions = Question.objects.order_by('-pub_date')[:5]\par
    context = \{         //read the variable latest_questions\par
        'latest_questions':latest_questions\par
    \}\par
    template = loader.get_template('polls/index.html').render(context)   //render the value of variables\par
    return HttpResponse(template)\par
def detail(request, question_id):\par
    return HttpResponse("this is the detail of the question %s"% question_id)\par
def results(request, question_id):\par
    return HttpResponse("these are the results of the question %s"% question_id)\par
def vote(request, question_id):\par
    return\par
---------------------------SECOND WAY----------------------------\par
from django.shortcuts import render\par
from django.http import HttpResponse\par
from django.template import loader, RequestContext\par
from .models import  Question\par
# Create your views here.\par
def index(request):\par
    latest_questions = Question.objects.order_by('-pub_date')[:5]\par
    context = \{'latest_questions':latest_questions\}\par
    return render(request,'polls/index.html',context)\par
\par
def detail(request, question_id):\par
    return HttpResponse("this is the detail of the question %s"% question_id)\par
def results(request, question_id):\par
    return HttpResponse("these are the results of the question %s"% question_id)\par
def vote(request, question_id):\par
    return HttpResponse("Vote on question %s"% question_id)\par
/********************************************\par
\highlight1 26\highlight0 . to add template to click in a question and show in diferent page \par
    create a directory "templates" >"polls" > "index.html" in to app. and add\par
/****************************\par
<!DOCTYPE html>\par
<html lang="en">\par
<head>\par
    <meta charset="UTF-8">\par
    <title>Title</title>\par
</head>\par
<body>\par
\{% if latest_questions %\}\par
    <ul>\par
        \{% for question in latest_questions %\}  //to iterate in variable latest_questions\par
            <li><a href = '/polls/\{\{question.id\}\}'><b>\{\{question.question_text\}\}</b></a></li>   //to set an id as link \par
        \{%endfor%\}\par
    </ul>\par
\{% else %\}\par
    <p>You don't have any questions.Please add some.</p>\par
\{% endif %\}\par
/***************\par
</body>\par
</html>\par
\par
27. It's usefull to get results or choices of a questions.\par
     in views add\par
/*****************************************\par
from django.shortcuts import render\par
\par
from django.http import HttpResponse\par
from django.template import loader, RequestContext\par
from .models import  Question\par
# Create your views here.\par
\par
def index(request):\par
    latest_questions = Question.objects.order_by('-pub_date')[:5]\par
    context = \{'latest_questions':latest_questions\}\par
    return render(request,'polls/index.html',context)\par
\par
def detail(request, question_id):\par
    question = Questions.objects.get(pk = question_id)\par
    return render(request,'polls/detail.html',\{'question':question\})\par
\par
def results(request, question_id):\par
    return HttpResponse("these are the results of the question %s"% question_id)\par
\par
def vote(request, question_id):\par
    return HttpResponse("Vote on question %s"% question_id)\par
/*****************************************\par
\par
28. create the template detail.html in polls adding\par
/**********************\par
<!DOCTYPE html>\par
<html lang="en">\par
<head>\par
    <meta charset="UTF-8">\par
    <title>Title</title>\par
</head>\par
<body>\par
\par
<h1>\{\{question.question_text\}\} </h1>\par
\par
<ul>\par
    \{% for choice in question.choice_set.all %\}    #to print choices of a questions\par
    <li> \{\{choice.choice_text\}\} </li>\par
    \{% endfor%\}\par
</ul>\par
\par
</body>\par
</html>\par
/************************\par
43. to improve content html. Add base.html in polls templates\par
<!DOCTYPE html>\par
<html lang="en">\par
<head>\par
    <meta charset="UTF-8">\par
    <title>Title</title>\par
</head>\par
<body>\par
\par
\{% block main_content %\}\par
\{% endblock %\}\par
\par
</body>\par
</html>\par
29. add the blocks main and end in views detail and index as following\par
in detail.html: \par
/*********************\par
\{% extends 'polls/base.html' %\}\par
\{% block main_content %\}\par
<h1>\{\{question.question_text\}\} </h1>\par
\par
<ul>\par
    \{% for choice in question.choice_set.all %\}\par
    <li> \{\{choice.choice_text\}\} </li>\par
    \{% endfor%\}\par
</ul>\par
\par
\{% endblock %\}\par
/**********************\par
into index.html \par
\par
\{% extends 'polls/base.html '%\}\par
\{% block main_content %\}\par
\par
\{% if latest_questions %\}\par
    <ul>\par
        \{% for question in latest_questions %\}\par
            <li><a href = '/polls/\{\{question.id\}\}'><b>\{\{question.question_text\}\}</b></a></li>\par
        \{%endfor%\}\par
    </ul>\par
\{% else %\}\par
    <p>You don't have any questions.Please add some.</p>\par
\{% endif %\}\par
\par
\{% endblock %\}\par
\par
30. also it's posible create an footer.html and add a footer as:\par
/*********\par
<hr>\par
<p> Footer </p>\par
</hr>\par
/**********\par
31. the foother would be added into base.html as following:\par
/*************\par
<!DOCTYPE html>\par
<html lang="en">\par
<head>\par
    <meta charset="UTF-8">\par
    <title>Title</title>\par
</head>\par
<body>\par
<hr>\par
<p> Header</p>\par
<hr>\par
\par
\{% block main_content %\}\par
\{% endblock %\}\par
\{% include "polls/footer.html" %\}\par
\par
</body>\par
</html>\par
/*************\par
\par
32. ////////////////////////////8888888888/////////////////////////\par
To add a form , first change the way to call href in index.html\par
/******************\par
\{% extends 'polls/base.html '%\}\par
\{% block main_content %\}\par
\par
\{% if latest_questions %\}\par
    <ul>\par
        \{% for question in latest_questions %\}\par
            <li><a href = \{% url "detail" question.id%\}><b>\{\{question.question_text\}\}</b></a></li> #to call view detail\par
        \{%endfor%\}\par
    </ul>\par
\{% else %\}\par
    <p>You don't have any questions.Please add some.</p>\par
\{% endif %\}\par
\par
\{% endblock %\}\par
\par
/**************************\par
\par
33. add the namespace becaouse could be posible to have more than one app and could have problems calling templates.\par
in urls.py add the following:\par
/**********************\par
"""troja URL Configuration\par
\par
The `urlpatterns` list routes URLs to views. For more information please see:\par
    {{\field{\*\fldinst{HYPERLINK https://docs.djangoproject.com/en/1.11/topics/http/urls/ }}{\fldrslt{https://docs.djangoproject.com/en/1.11/topics/http/urls/\ul0\cf0}}}}\f0\fs22\par
Examples:\par
Function views\par
    1. Add an import:  from my_app import views\par
    2. Add a URL to urlpatterns:  url(r'^$', views.home, name='home')\par
Class-based views\par
    1. Add an import:  from other_app.views import Home\par
    2. Add a URL to urlpatterns:  url(r'^$', Home.as_view(), name='home')\par
Including another URLconf\par
    1. Import the include() function: from django.conf.urls import url, include\par
    2. Add a URL to urlpatterns:  url(r'^blog/', include('blog.urls'))\par
"""\par
from django.conf.urls import url, include\par
from django.contrib import admin\par
\par
\par
urlpatterns = [\par
    url(r'^admin/', admin.site.urls),\par
    url(r'^polls/', include(('polls.urls','polls'), namespace="polls")),\par
]\par
/*********************************\par
\par
34. add reference on index.html of the namespace \par
\tab  <li><a href = \{% url "polls:detail" question.id%\}><b>\par
35. later of this add the form into detail.html as following:\par
/*****************************************\par
\{% extends 'polls/base.html' %\}\par
\{% block main_content %\}\par
<h1>\{\{question.question_text\}\} </h1>\par
\{% if error_message %\}<p><strong> \{\{error_message\}\}</strong></p>\{% endif %\}\par
\par
<form action = "\{% url 'polls:vote' question.id %\}" method="post">\par
    \{% csrf_token %\}  #to set the security into django way to the forms\par
    \{% for choice in question.choice_set.all %\}\par
        <input type="radio" name="choice" id="choice\{\{forloop.counter\}\}" value="\{\{choice.id\}\}">\par
        <label for="choice\{\{forloop.counter\}\}">\{\{choice.choice_text\}\}</label><br>\par
    \{% endfor %\}\par
    <input type="submit" value="vote">\par
</form>\par
\par
\{% endblock %\}\par
36. so, modify the vote function in views.py , later modify results and detail\par
\par
/**************************\par
from django.shortcuts import render, get_object_or_404\par
\par
from django.http import HttpResponse, HttpResponseRedirect\par
from django.urls import reverse\par
from django.template import loader, RequestContext\par
from .models import Question\par
\par
# Create your views here.\par
def index(request):\par
    latest_questions = Question.objects.order_by('-pub_date')[:5]\par
    context = \{'latest_questions':latest_questions\}\par
    return render(request,'polls/index.html',context)\par
\par
def detail(request, question_id):\par
    question = get_object_or_404(Question, pk = question_id)\par
    return render(request,'polls/detail.html',\{'question':question\})\par
\par
def results(request,question_id):\par
    question = get_object_or_404(Question, pk = question_id)\par
    return render(request, 'polls/results.html',\{'question':question\})\par
\par
def vote(request,question_id):\par
    question = get_object_or_404(Question, pk = question_id)\par
    try:\par
        selected_choice = question.choice_set.get(pk = request.POST['choice'])\par
    except:\par
        return render(request,'polls/detail.html',\{'question':question,'error_message':"Please select a choice"\})\par
    else:\par
        selected_choice.votes +=1\par
        selected_choice.save()\par
\par
        return HttpResponseRedirect(reverse('polls:results', args = (question.id,)))\par
\par
/**************************\par
\par
37. now is required the results.html\par
/**********************\par
\{% extends 'polls/base.html '%\}\par
\{% block main_content %\}\par
<h1>\{\{question.question_text\}\} </h1>\par
<ul>\par
    \{% for choice in question.choice_set.all %\}\par
    <li>\{\{choice.choice_text\}\}-- \{\{choice.votes\}\} vote\{\{choice.votes|pluralize\}\}</li>\par
    \{% endfor %\}\par
</ul>\par
<a href= "\{% url 'polls:detail' question.id %\}">Vote Again</a>\par
\{% endblock %\}\par
/**********************\par
\par
38.For add css files is necesary create a directory static into polls app and polls into static.Add style.css\par
/**********\par
li a \{\par
    font-size: 20px;\par
    color:blue;\par
\}\par
/*************\par
39. call the css from base.html\par
/******************\par
\{% load staticfiles %\}\par
<!DOCTYPE html>\par
<html lang="en">\par
<head>\par
    <meta charset="UTF-8">\par
    <title>Title</title>\par
    <link rel="stylesheet" type="text/css" href="\{% static 'polls/style.css' %\}"/>\par
</head>\par
<body>\par
<hr>\par
<p> Header</p>\par
<hr>\par
\par
\{% block main_content %\}\par
\{% endblock %\}\par
\{% include "polls/footer.html" %\}\par
\par
</body>\par
</html>\par
/******************\par
\par
40. later add an image. For this, create a directory images into static>polls> and add background.jpg "static>polls>images>baground.jpg"\par
in style.css addthe following:\par
\par
li a \{\par
    font-size: 20px;\par
    color:red;\par
\}\par
\par
body\{\par
    color: white;\par
    background: white url("images/background.jpg") no-repeat;\par
\}\par
41.///////////////////////10//////////////////////////\par
Adding bootstrap\par
42. doownload bootstrap zip. and past into  static>polls>\par
43. later is able to use a template, go to bootstrap web page and select a template and view the code, copy the  3 first metatag and paste\par
into the base.html of the templates. later use core css bootsrap. The base.html would be as following:\par
/********************************\par
\{% load staticfiles %\}\par
<!DOCTYPE html>\par
<html lang="en">\par
<head>\par
    <meta charset="utf-8">\par
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">\par
    <meta name="description" content="">\par
\par
    <title>Title</title>\par
    <link rel="stylesheet" type="text/css" href="\{% static 'polls/bootstrap-4.1.3-dist/css/bootstrap.min.css' %\}"/>\par
    <link rel="stylesheet" type="text/css" href="\{% static 'polls/style.css' %\}"/>\par
</head>\par
<body>\par
<hr>\par
<p> Header</p>\par
<hr>\par
\par
\{% block main_content %\}\par
\{% endblock %\}\par
\{% include "polls/footer.html" %\}\par
\par
</body>\par
</html>\par
/***********************************\par
44.add new header.html into templates and add the menu of code of the template of bootstrap\par
/***********************\par
<nav class="navbar navbar-expand-md navbar-dark fixed-top bg-dark">\par
      <a class="navbar-brand" href="#">Navbar</a>\par
      <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarsExampleDefault" aria-controls="navbarsExampleDefault" aria-expanded="false" aria-label="Toggle navigation">\par
        <span class="navbar-toggler-icon"></span>\par
      </button>\par
\par
      <div class="collapse navbar-collapse" id="navbarsExampleDefault">\par
        <ul class="navbar-nav mr-auto">\par
          <li class="nav-item active">\par
            <a class="nav-link" href="#">Home <span class="sr-only">(current)</span></a>\par
          </li>\par
          <li class="nav-item">\par
            <a class="nav-link" href="#">Link</a>\par
          </li>\par
          <li class="nav-item">\par
            <a class="nav-link disabled" href="#">Disabled</a>\par
          </li>\par
          <li class="nav-item dropdown">\par
            <a class="nav-link dropdown-toggle" href="{{\field{\*\fldinst{HYPERLINK http://example.com }}{\fldrslt{http://example.com\ul0\cf0}}}}\f0\fs22 " id="dropdown01" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Dropdown</a>\par
            <div class="dropdown-menu" aria-labelledby="dropdown01">\par
              <a class="dropdown-item" href="#">Action</a>\par
              <a class="dropdown-item" href="#">Another action</a>\par
              <a class="dropdown-item" href="#">Something else here</a>\par
            </div>\par
          </li>\par
        </ul>\par
        <form class="form-inline my-2 my-lg-0">\par
          <input class="form-control mr-sm-2" type="text" placeholder="Search" aria-label="Search">\par
          <button class="btn btn-outline-success my-2 my-sm-0" type="submit">Search</button>\par
        </form>\par
      </div>\par
    </nav>\par
/***********************\par
45. later include in base.html the header \par
/******************\par
\{% load staticfiles %\}\par
<!DOCTYPE html>\par
<html lang="en">\par
<head>\par
    <meta charset="utf-8">\par
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">\par
    <meta name="description" content="">\par
\par
    <title>Title</title>\par
    <link rel="stylesheet" type="text/css" href="\{% static 'polls/bootstrap-4.1.3-dist/css/bootstrap.min.css' %\}"/>\par
    <link rel="stylesheet" type="text/css" href="\{% static 'polls/style.css' %\}"/>\par
</head>\par
<body>\par
<hr>\par
<p> Header</p>\par
<hr>\par
\{% include "polls/header.html" %\}\par
\{% block main_content %\}\par
\{% endblock %\}\par
\{% include "polls/footer.html" %\}\par
\par
</body>\par
</html>\par
/******************\par
}
 